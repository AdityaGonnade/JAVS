{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng-angular-popup\";\nimport * as i5 from \"src/app/services/user-store.service\";\nimport * as i6 from \"src/app/services/reset-password.service\";\nimport * as i7 from \"@angular/common\";\nconst _c0 = [\"myTest\"];\nfunction LoginComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Email is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Email is invalid*\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  // @ViewChild('myModal') modal: any;\n  constructor(fb, auth, router, toast, userStore, resetService, elementRef) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n    this.userStore = userStore;\n    this.resetService = resetService;\n    this.elementRef = elementRef;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPassword() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      //Send the object to database\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          // alert(res.message);\n          this.auth.storeToken(res.token);\n          let tokenPayload = this.auth.decodeToken();\n          this.userStore.setFullNameForStore(tokenPayload.name);\n          this.userStore.setRoleForStore(tokenPayload.role);\n          this.toast.success({\n            detail: \"SUCCESS\",\n            summary: res.message,\n            duration: 5000\n          });\n          if (res.role == \"User\") {\n            this.loginForm.reset();\n            this.router.navigate(['dashboard']);\n          } else {\n            this.loginForm.reset();\n            this.router.navigate(['/']);\n          }\n        },\n        error: err => {\n          // alert(err?.error.message)\n          this.toast.error({\n            detail: \"ERROR\",\n            summary: \"Something went wrong!\",\n            duration: 5000\n          });\n        }\n      });\n    } else {\n      //throw error using toaster and with required field.\n      ValidateForm.validateAllFormFields(this.loginForm);\n      alert(\"Your form is invaild\");\n    }\n  }\n  checkValidEmail(event) {\n    const value = event;\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/;\n    this.isValidEmail = pattern.test(value);\n    return this.isValidEmail;\n  }\n  confirmToReset() {\n    if (this.checkValidEmail(this.resetPasswordEmail)) {\n      //api call to be done\n      this.resetService.sendResetPasswordLink(this.resetPasswordEmail).subscribe({\n        next: res => {\n          this.toast.success({\n            detail: 'Success',\n            summary: 'Password reset was Success!',\n            duration: 5000\n          });\n          this.resetPasswordEmail = \"\";\n          const buttonRef = document.getElementById(\"closeBtn\");\n          buttonRef?.click();\n        },\n        error: err => {\n          this.toast.error({\n            detail: 'ERROR',\n            summary: 'Something went wrong! password reset',\n            duration: 5000\n          });\n        }\n      });\n    }\n  }\n  openModal() {\n    // this.elementRef.nativeElement.style.display = 'block';\n    // this.modal.openModal();\n    // const dialogRef = this.dialog.open(this.myModal);\n    // dialogRef.afterClosed().subscribe(result => {\n    //   console.log('The dialog was closed');\n    //   this.animal = result;\n    // });\n  }\n  closeModal() {}\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgToastService), i0.ɵɵdirectiveInject(i5.UserStoreService), i0.ɵɵdirectiveInject(i6.ResetPasswordService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n    }\n  },\n  decls: 63,\n  vars: 15,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/signup\"], [\"id\", \"forget\", \"routerLink\", \"/signupvendor\"], [1, \"mx-3\", \"my-2\", \"py-2\", \"bordert\"], [1, \"text-center\", \"py-3\"], [\"href\", \"https://www.facebook.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.freepnglogos.com/uploads/aqua-blue-f-facebook-logo-png-22.png\", \"alt\", \"facebook\"], [\"href\", \"https://www.google.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.freepnglogos.com/uploads/google-favicon-logo-20.png\", \"alt\", \"google\"], [\"href\", \"https://www.outlook.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.freepnglogos.com/uploads/logo-outlook/outlook-transparent-save-outlook-png-icons-and-png-backgrounds-0.png\", \"alt\", \"outlook\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"myModal\", \"\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [2, \"font-size\", \"25px\", \"font-weight\", \"700\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"closeBtn\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, LoginComponent_small_14_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"span\", 14)(18, \"input\", 15);\n      i0.ɵɵelementStart(19, \"span\", 16);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_19_listener() {\n        return ctx.hideShowPassword();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(20, LoginComponent_small_20_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(21, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(22, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 18);\n      i0.ɵɵtext(24, \"Don't have account? \");\n      i0.ɵɵelementStart(25, \"a\", 19);\n      i0.ɵɵtext(26, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 18);\n      i0.ɵɵtext(28, \"Want to become a seller? \");\n      i0.ɵɵelementStart(29, \"a\", 20);\n      i0.ɵɵtext(30, \"Vendor Sign Up\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(31, \"div\", 21)(32, \"div\", 22)(33, \"a\", 23);\n      i0.ɵɵelement(34, \"img\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"a\", 25);\n      i0.ɵɵelement(36, \"img\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"a\", 27);\n      i0.ɵɵelement(38, \"img\", 28);\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelementStart(39, \"div\", 29, 30)(41, \"div\", 31)(42, \"div\", 32)(43, \"div\", 33)(44, \"p\", 34)(45, \"span\", 35);\n      i0.ɵɵtext(46, \"Forget your password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(47, \"br\");\n      i0.ɵɵelementStart(48, \"small\");\n      i0.ɵɵtext(49, \"Please provide your E-mail we will send the reset link\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(50, \"button\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"div\", 37)(52, \"div\", 9)(53, \"div\", 10);\n      i0.ɵɵelement(54, \"span\", 11);\n      i0.ɵɵelementStart(55, \"input\", 38);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_55_listener($event) {\n        return ctx.resetPasswordEmail = $event;\n      })(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_55_listener($event) {\n        return ctx.checkValidEmail($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(56, LoginComponent_small_56_Template, 2, 0, \"small\", 13);\n      i0.ɵɵtemplate(57, LoginComponent_small_57_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"div\", 39)(59, \"button\", 40);\n      i0.ɵɵtext(60, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"button\", 41);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_61_listener() {\n        return ctx.confirmToReset();\n      });\n      i0.ɵɵtext(62, \"Send\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(35);\n      i0.ɵɵproperty(\"ngModel\", ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isValidEmail && ctx.resetPasswordEmail);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !(ctx.isValidEmail && ctx.resetPasswordEmail));\n    }\n  },\n  dependencies: [i7.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","ValidateForm","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","auth","router","toast","userStore","resetService","elementRef","type","isText","eyeIcon","ngOnInit","loginForm","group","username","required","password","hideShowPassword","onLogin","valid","login","value","subscribe","next","res","storeToken","token","tokenPayload","decodeToken","setFullNameForStore","name","setRoleForStore","role","success","detail","summary","message","duration","reset","navigate","error","err","validateAllFormFields","alert","checkValidEmail","event","pattern","isValidEmail","test","confirmToReset","resetPasswordEmail","sendResetPasswordLink","buttonRef","document","getElementById","click","openModal","closeModal","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","NgToastService","i5","UserStoreService","i6","ResetPasswordService","ElementRef","selectors","viewQuery","LoginComponent_Query","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_small_14_Template","ɵɵlistener","LoginComponent_Template_span_click_19_listener","LoginComponent_small_20_Template","LoginComponent_Template_button_click_21_listener","LoginComponent_Template_input_ngModelChange_55_listener","$event","LoginComponent_small_56_Template","LoginComponent_small_57_Template","LoginComponent_Template_button_click_61_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","controls","dirty","hasError","ɵɵclassMapInterpolate1"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/components/login/login.component.ts","/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { NgToastService } from 'ng-angular-popup';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ResetPasswordService } from 'src/app/services/reset-password.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n    type: string = \"password\";\n    isText: boolean = false;\n    eyeIcon: string = \"fa-eye-slash\";\n    loginForm!: FormGroup;\n    public resetPasswordEmail!:string;\n    public isValidEmail! : boolean; \n\n    // @ViewChild('myModal') modal: any;\n\n    constructor(\n      private fb: FormBuilder, \n      private auth: AuthService, \n      private router: Router,\n      private toast: NgToastService,\n      private userStore : UserStoreService,\n      private resetService: ResetPasswordService, private elementRef: ElementRef,\n      \n      ){\n\n    }\n\n    ngOnInit(): void{\n      this.loginForm = this.fb.group({\n        username: ['',Validators.required],\n        password: ['',Validators.required]\n      })\n    }\n\n    hideShowPassword(){\n      this.isText = !this.isText;\n      this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n      this.isText ? this.type = \"text\" : this.type = \"password\";\n    }\n\n    onLogin(){\n      if(this.loginForm.valid){\n\n        //Send the object to database\n        this.auth.login(this.loginForm.value)\n        .subscribe({\n          next:(res)=>{\n            // alert(res.message);\n            this.auth.storeToken(res.token);\n            let tokenPayload = this.auth.decodeToken();\n            this.userStore.setFullNameForStore(tokenPayload.name);\n            this.userStore.setRoleForStore(tokenPayload.role);\n            this.toast.success({detail:\"SUCCESS\", summary:res.message, duration: 5000});\n            if(res.role == \"User\"){\n              this.loginForm.reset();\n              this.router.navigate(['dashboard']);\n            }\n            else{\n              this.loginForm.reset();\n              this.router.navigate(['/']);\n            }\n          },\n          error:(err)=>{\n            // alert(err?.error.message)\n            this.toast.error({detail:\"ERROR\", summary:\"Something went wrong!\", duration: 5000});\n          }\n        })\n      }\n      else{\n        //throw error using toaster and with required field.\n        ValidateForm.validateAllFormFields(this.loginForm);\n        alert(\"Your form is invaild\");\n      }\n    }\n\n    checkValidEmail(event: string){\n      const value = event;\n      const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/;\n      this.isValidEmail = pattern.test(value);\n      return this.isValidEmail;\n    }\n\n    confirmToReset(){\n      if(this.checkValidEmail(this.resetPasswordEmail)){\n        \n        //api call to be done\n\n        this.resetService.sendResetPasswordLink(this.resetPasswordEmail)\n        .subscribe({\n          next:(res)=>{\n            this.toast.success({\n              detail: 'Success',\n              summary: 'Password reset was Success!',\n              duration: 5000,\n            });\n            this.resetPasswordEmail =\"\";\n            const buttonRef = document.getElementById(\"closeBtn\");\n            buttonRef?.click();\n          },\n          error:(err)=>{\n            this.toast.error({\n              detail: 'ERROR',\n              summary: 'Something went wrong! password reset',\n              duration: 5000,\n            });\n          }\n        })\n      }\n    }\n    @ViewChild('myTest') modal: any;\n\n  openModal() {\n    // this.elementRef.nativeElement.style.display = 'block';\n    // this.modal.openModal();\n\n    // const dialogRef = this.dialog.open(this.myModal);\n\n    // dialogRef.afterClosed().subscribe(result => {\n    //   console.log('The dialog was closed');\n    //   this.animal = result;\n    // });\n\n  }\n\n  closeModal():void{\n\n  }\n\n}\n","\n<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n\n                    </div>\n                    <div class=\"panel-body p-3\">\n                        <form [formGroup]=\"loginForm\">\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                                </div>\n                            </div>\n                            <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" \n                                class=\"text-danger\">*Username is required</small>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n                                    <span class=\"fa fa-lock p-2\"></span>\n                                    <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                                    <span class=\"fa {{ eyeIcon }}\" (click)=\"hideShowPassword()\"></span>\n                                </div>\n                            </div>\n                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" \n                                class=\"text-danger\">*Password is required</small>\n                            <!-- <div class=\"form-inline fr mt-4\"> <a id=\"forgot\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"font-weight-bold\">Forgot password?</a> </div> -->\n                            <button \n                                (click)=\"onLogin()\"\n                                type=\"submit\" \n                                class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\n                            <div class=\"text-center pt-4 text-muted\">Don't have account? <a id=\"forget\" routerLink=\"/signup\">Sign Up</a></div>\n                            <div class=\"text-center pt-4 text-muted\">Want to become a seller? <a id=\"forget\" routerLink=\"/signupvendor\">Vendor Sign Up</a></div>\n                        </form>\n                    </div>\n                    <div class=\"mx-3 my-2 py-2 bordert\">\n                        <div class=\"text-center py-3\">\n                            <a href=\"https://www.facebook.com\" target=\"_blank\" class=\"px-2\"><img src=\"https://www.freepnglogos.com/uploads/aqua-blue-f-facebook-logo-png-22.png\" alt=\"facebook\"></a>\n                            <a href=\"https://www.google.com\" target=\"_blank\" class=\"px-2\"><img src=\"https://www.freepnglogos.com/uploads/google-favicon-logo-20.png\" alt=\"google\"></a>\n                            <a href=\"https://www.outlook.com\" target=\"_blank\" class=\"px-2\"><img src=\"https://www.freepnglogos.com/uploads/logo-outlook/outlook-transparent-save-outlook-png-icons-and-png-backgrounds-0.png\" alt=\"outlook\"></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal fade\"  #myModal  id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <p class=\"modal-title\" id=\"exampleModalLabel\"> <span style=\"font-size: 25px;font-weight:700\">Forget your password?</span><br>\n                    <small>Please provide your E-mail we will send the reset link</small></p>\n\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n\n            </div>\n\n            <div class=\"modal-body\">\n                <div class=\"form-group pt-3\">\n                    <div class=\"input-field\"> <span class=\"fa fa-user p-2\"></span> <input [(ngModel)]=\"resetPasswordEmail\"  (ngModelChange)=\"checkValidEmail($event)\" type=\"text\" placeholder=\"Email\"> </div>\n                </div>\n                <small *ngIf=\"!resetPasswordEmail\" class=\"text-danger\">*Email is required*</small>\n                <small *ngIf=\"!isValidEmail && resetPasswordEmail\" class=\"text-danger\">*Email is invalid*</small>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" id=\"closeBtn\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button (click)=\"confirmToReset()\" [disabled]=\"!(isValidEmail && resetPasswordEmail)\" type=\"button\" class=\"btn btn-primary\">Send</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <div class=\"modal-header\">\n      <h4 class=\"modal-title\">Small Modal</h4>\n      <button type=\"button\" class=\"close\" (click)=\"closeModal()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      This is a small modal.\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal()\">Close</button>\n    </div> -->\n\n<!-- zoej htzq khag vrqu -->\n\n<!-- google client id : 1080246497368-nj8foeq93ps3anpbf7rg11c1cl68n128.apps.googleusercontent.com -->"],"mappings":";AACA,SAA8CA,UAAU,QAAQ,gBAAgB;AAGhF,OAAOC,YAAY,MAAM,8BAA8B;;;;;;;;;;;;ICc3BC,EAAA,CAAAC,cAAA,gBACwB;IAAAD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAQrDH,EAAA,CAAAC,cAAA,gBACwB;IAAAD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAuCjEH,EAAA,CAAAC,cAAA,gBAAuD;IAAAD,EAAA,CAAAE,MAAA,0BAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAClFH,EAAA,CAAAC,cAAA,gBAAuE;IAAAD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;ADpDjH,OAAM,MAAOC,cAAc;EASvB;EAEAC,YACUC,EAAe,EACfC,IAAiB,EACjBC,MAAc,EACdC,KAAqB,EACrBC,SAA4B,EAC5BC,YAAkC,EAAUC,UAAsB;IALlE,KAAAN,EAAE,GAAFA,EAAE;IACF,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,YAAY,GAAZA,YAAY;IAAgC,KAAAC,UAAU,GAAVA,UAAU;IAfhE,KAAAC,IAAI,GAAW,UAAU;IACzB,KAAAC,MAAM,GAAY,KAAK;IACvB,KAAAC,OAAO,GAAW,cAAc;EAiBhC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAACrB,UAAU,CAACsB,QAAQ,CAAC;MAClCC,QAAQ,EAAE,CAAC,EAAE,EAACvB,UAAU,CAACsB,QAAQ;KAClC,CAAC;EACJ;EAEAE,gBAAgBA,CAAA;IACd,IAAI,CAACR,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC1B,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAACA,OAAO,GAAG,cAAc;IACrE,IAAI,CAACD,MAAM,GAAG,IAAI,CAACD,IAAI,GAAG,MAAM,GAAG,IAAI,CAACA,IAAI,GAAG,UAAU;EAC3D;EAEAU,OAAOA,CAAA;IACL,IAAG,IAAI,CAACN,SAAS,CAACO,KAAK,EAAC;MAEtB;MACA,IAAI,CAACjB,IAAI,CAACkB,KAAK,CAAC,IAAI,CAACR,SAAS,CAACS,KAAK,CAAC,CACpCC,SAAS,CAAC;QACTC,IAAI,EAAEC,GAAG,IAAG;UACV;UACA,IAAI,CAACtB,IAAI,CAACuB,UAAU,CAACD,GAAG,CAACE,KAAK,CAAC;UAC/B,IAAIC,YAAY,GAAG,IAAI,CAACzB,IAAI,CAAC0B,WAAW,EAAE;UAC1C,IAAI,CAACvB,SAAS,CAACwB,mBAAmB,CAACF,YAAY,CAACG,IAAI,CAAC;UACrD,IAAI,CAACzB,SAAS,CAAC0B,eAAe,CAACJ,YAAY,CAACK,IAAI,CAAC;UACjD,IAAI,CAAC5B,KAAK,CAAC6B,OAAO,CAAC;YAACC,MAAM,EAAC,SAAS;YAAEC,OAAO,EAACX,GAAG,CAACY,OAAO;YAAEC,QAAQ,EAAE;UAAI,CAAC,CAAC;UAC3E,IAAGb,GAAG,CAACQ,IAAI,IAAI,MAAM,EAAC;YACpB,IAAI,CAACpB,SAAS,CAAC0B,KAAK,EAAE;YACtB,IAAI,CAACnC,MAAM,CAACoC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;WACpC,MACG;YACF,IAAI,CAAC3B,SAAS,CAAC0B,KAAK,EAAE;YACtB,IAAI,CAACnC,MAAM,CAACoC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;QAE/B,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAG;UACX;UACA,IAAI,CAACrC,KAAK,CAACoC,KAAK,CAAC;YAACN,MAAM,EAAC,OAAO;YAAEC,OAAO,EAAC,uBAAuB;YAAEE,QAAQ,EAAE;UAAI,CAAC,CAAC;QACrF;OACD,CAAC;KACH,MACG;MACF;MACA3C,YAAY,CAACgD,qBAAqB,CAAC,IAAI,CAAC9B,SAAS,CAAC;MAClD+B,KAAK,CAAC,sBAAsB,CAAC;;EAEjC;EAEAC,eAAeA,CAACC,KAAa;IAC3B,MAAMxB,KAAK,GAAGwB,KAAK;IACnB,MAAMC,OAAO,GAAG,kCAAkC;IAClD,IAAI,CAACC,YAAY,GAAGD,OAAO,CAACE,IAAI,CAAC3B,KAAK,CAAC;IACvC,OAAO,IAAI,CAAC0B,YAAY;EAC1B;EAEAE,cAAcA,CAAA;IACZ,IAAG,IAAI,CAACL,eAAe,CAAC,IAAI,CAACM,kBAAkB,CAAC,EAAC;MAE/C;MAEA,IAAI,CAAC5C,YAAY,CAAC6C,qBAAqB,CAAC,IAAI,CAACD,kBAAkB,CAAC,CAC/D5B,SAAS,CAAC;QACTC,IAAI,EAAEC,GAAG,IAAG;UACV,IAAI,CAACpB,KAAK,CAAC6B,OAAO,CAAC;YACjBC,MAAM,EAAE,SAAS;YACjBC,OAAO,EAAE,6BAA6B;YACtCE,QAAQ,EAAE;WACX,CAAC;UACF,IAAI,CAACa,kBAAkB,GAAE,EAAE;UAC3B,MAAME,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;UACrDF,SAAS,EAAEG,KAAK,EAAE;QACpB,CAAC;QACDf,KAAK,EAAEC,GAAG,IAAG;UACX,IAAI,CAACrC,KAAK,CAACoC,KAAK,CAAC;YACfN,MAAM,EAAE,OAAO;YACfC,OAAO,EAAE,sCAAsC;YAC/CE,QAAQ,EAAE;WACX,CAAC;QACJ;OACD,CAAC;;EAEN;EAGFmB,SAASA,CAAA;IACP;IACA;IAEA;IAEA;IACA;IACA;IACA;EAAA;EAIFC,UAAUA,CAAA,GAEV;;SA1HW1D,cAAc;;mBAAdA,MAAc,EAAAJ,EAAA,CAAA+D,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAjE,EAAA,CAAA+D,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAnE,EAAA,CAAA+D,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAArE,EAAA,CAAA+D,iBAAA,CAAAO,EAAA,CAAAC,cAAA,GAAAvE,EAAA,CAAA+D,iBAAA,CAAAS,EAAA,CAAAC,gBAAA,GAAAzE,EAAA,CAAA+D,iBAAA,CAAAW,EAAA,CAAAC,oBAAA,GAAA3E,EAAA,CAAA+D,iBAAA,CAAA/D,EAAA,CAAA4E,UAAA;AAAA;;QAAdxE,MAAc;EAAAyE,SAAA;EAAAC,SAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;MCf3BhF,EAAA,CAAAC,cAAA,aAAmB;MAMuCD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAGhDH,EAAA,CAAAC,cAAA,aAA4B;MAIZD,EAAA,CAAAkF,SAAA,gBAAoC;MAExClF,EAAA,CAAAG,YAAA,EAAM;MAEVH,EAAA,CAAAmF,UAAA,KAAAC,gCAAA,oBACqD;MACrDpF,EAAA,CAAAC,cAAA,cAA6B;MAErBD,EAAA,CAAAkF,SAAA,gBAAoC;MAEpClF,EAAA,CAAAC,cAAA,gBAA4D;MAA7BD,EAAA,CAAAqF,UAAA,mBAAAC,+CAAA;QAAA,OAASL,GAAA,CAAA3D,gBAAA,EAAkB;MAAA,EAAC;MAACtB,EAAA,CAAAG,YAAA,EAAO;MAG3EH,EAAA,CAAAmF,UAAA,KAAAI,gCAAA,oBACqD;MAErDvF,EAAA,CAAAC,cAAA,kBAGiD;MAF7CD,EAAA,CAAAqF,UAAA,mBAAAG,iDAAA;QAAA,OAASP,GAAA,CAAA1D,OAAA,EAAS;MAAA,EAAC;MAE0BvB,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAC/DH,EAAA,CAAAC,cAAA,eAAyC;MAAAD,EAAA,CAAAE,MAAA,4BAAoB;MAAAF,EAAA,CAAAC,cAAA,aAAoC;MAAAD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAC5GH,EAAA,CAAAC,cAAA,eAAyC;MAAAD,EAAA,CAAAE,MAAA,iCAAyB;MAAAF,EAAA,CAAAC,cAAA,aAA0C;MAAAD,EAAA,CAAAE,MAAA,sBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAGtIH,EAAA,CAAAC,cAAA,eAAoC;MAEoCD,EAAA,CAAAkF,SAAA,eAAoG;MAAAlF,EAAA,CAAAG,YAAA,EAAI;MACxKH,EAAA,CAAAC,cAAA,aAA8D;MAAAD,EAAA,CAAAkF,SAAA,eAAwF;MAAAlF,EAAA,CAAAG,YAAA,EAAI;MAC1JH,EAAA,CAAAC,cAAA,aAA+D;MAAAD,EAAA,CAAAkF,SAAA,eAAgJ;MAAAlF,EAAA,CAAAG,YAAA,EAAI;MAU/OH,EAAA,CAAAC,cAAA,mBAA0H;MAIbD,EAAA,CAAAE,MAAA,6BAAqB;MAAAF,EAAA,CAAAG,YAAA,EAAO;MAAAH,EAAA,CAAAkF,SAAA,UAAI;MACzHlF,EAAA,CAAAC,cAAA,aAAO;MAAAD,EAAA,CAAAE,MAAA,8DAAsD;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAEzEH,EAAA,CAAAkF,SAAA,kBAA4F;MAEhGlF,EAAA,CAAAG,YAAA,EAAM;MAENH,EAAA,CAAAC,cAAA,eAAwB;MAEUD,EAAA,CAAAkF,SAAA,gBAAoC;MAAClF,EAAA,CAAAC,cAAA,iBAAmH;MAA5GD,EAAA,CAAAqF,UAAA,2BAAAI,wDAAAC,MAAA;QAAA,OAAAT,GAAA,CAAA1B,kBAAA,GAAAmC,MAAA;MAAA,EAAgC,2BAAAD,wDAAAC,MAAA;QAAA,OAAmBT,GAAA,CAAAhC,eAAA,CAAAyC,MAAA,CAAuB;MAAA,EAA1C;MAAvC1F,EAAA,CAAAG,YAAA,EAAmH;MAEtLH,EAAA,CAAAmF,UAAA,KAAAQ,gCAAA,oBAAkF;MAClF3F,EAAA,CAAAmF,UAAA,KAAAS,gCAAA,oBAAiG;MACrG5F,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,eAA0B;MACgED,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACpGH,EAAA,CAAAC,cAAA,kBAA4H;MAApHD,EAAA,CAAAqF,UAAA,mBAAAQ,iDAAA;QAAA,OAASZ,GAAA,CAAA3B,cAAA,EAAgB;MAAA,EAAC;MAA0FtD,EAAA,CAAAE,MAAA,YAAI;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MA7D3HH,EAAA,CAAA8F,SAAA,GAAuB;MAAvB9F,EAAA,CAAA+F,UAAA,cAAAd,GAAA,CAAAhE,SAAA,CAAuB;MAEIjB,EAAA,CAAA8F,SAAA,GAAiG;MAAjG9F,EAAA,CAAAgG,WAAA,UAAAf,GAAA,CAAAhE,SAAA,CAAAgF,QAAA,aAAAC,KAAA,IAAAjB,GAAA,CAAAhE,SAAA,CAAAkF,QAAA,yBAAiG;MAKtHnG,EAAA,CAAA8F,SAAA,GAAuF;MAAvF9F,EAAA,CAAA+F,UAAA,SAAAd,GAAA,CAAAhE,SAAA,CAAAgF,QAAA,aAAAC,KAAA,IAAAjB,GAAA,CAAAhE,SAAA,CAAAkF,QAAA,yBAAuF;MAGlEnG,EAAA,CAAA8F,SAAA,GAAiG;MAAjG9F,EAAA,CAAAgG,WAAA,UAAAf,GAAA,CAAAhE,SAAA,CAAAgF,QAAA,aAAAC,KAAA,IAAAjB,GAAA,CAAAhE,SAAA,CAAAkF,QAAA,yBAAiG;MAEpFnG,EAAA,CAAA8F,SAAA,GAAa;MAAb9F,EAAA,CAAA+F,UAAA,SAAAd,GAAA,CAAApE,IAAA,CAAa;MACzCb,EAAA,CAAA8F,SAAA,GAAwB;MAAxB9F,EAAA,CAAAoG,sBAAA,QAAAnB,GAAA,CAAAlE,OAAA,KAAwB;MAG9Bf,EAAA,CAAA8F,SAAA,GAAuF;MAAvF9F,EAAA,CAAA+F,UAAA,SAAAd,GAAA,CAAAhE,SAAA,CAAAgF,QAAA,aAAAC,KAAA,IAAAjB,GAAA,CAAAhE,SAAA,CAAAkF,QAAA,yBAAuF;MAsCjCnG,EAAA,CAAA8F,SAAA,IAAgC;MAAhC9F,EAAA,CAAA+F,UAAA,YAAAd,GAAA,CAAA1B,kBAAA,CAAgC;MAElGvD,EAAA,CAAA8F,SAAA,GAAyB;MAAzB9F,EAAA,CAAA+F,UAAA,UAAAd,GAAA,CAAA1B,kBAAA,CAAyB;MACzBvD,EAAA,CAAA8F,SAAA,GAAyC;MAAzC9F,EAAA,CAAA+F,UAAA,UAAAd,GAAA,CAAA7B,YAAA,IAAA6B,GAAA,CAAA1B,kBAAA,CAAyC;MAIdvD,EAAA,CAAA8F,SAAA,GAAkD;MAAlD9F,EAAA,CAAA+F,UAAA,eAAAd,GAAA,CAAA7B,YAAA,IAAA6B,GAAA,CAAA1B,kBAAA,EAAkD"},"metadata":{},"sourceType":"module","externalDependencies":[]}