{"ast":null,"code":"var _class;\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = \"https://localhost:7031/api/User/\";\n    this.userPayload;\n  }\n  signUp(userObj) {\n    return this.http.post(`${this.baseUrl}register`, userObj);\n  }\n  login(loginObj) {\n    return this.http.post(`${this.baseUrl}authenticate`, loginObj);\n  }\n  signOut() {\n    localStorage.clear();\n    this.router.navigate(['login']);\n  }\n  storeToken(tokenValue) {\n    localStorage.setItem('token', tokenValue);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  decodeToken() {\n    const jwtHelper = new JwtHelperService();\n    const token = this.getToken();\n    return jwtHelper.decodeToken(token);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["JwtHelperService","AuthService","constructor","http","router","baseUrl","userPayload","signUp","userObj","post","login","loginObj","signOut","localStorage","clear","navigate","storeToken","tokenValue","setItem","getToken","getItem","isLoggedIn","decodeToken","jwtHelper","token","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl:string = \"https://localhost:7031/api/User/\"\n  private userPayload: any;\n  constructor(private http : HttpClient, private router: Router) {\n    this.userPayload\n   }\n\n   signUp(userObj: any){\n    return this.http.post<any>(`${this.baseUrl}register`,userObj);\n   }\n   \n\n   login(loginObj: any){\n    return this.http.post<any>(`${this.baseUrl}authenticate`,loginObj)\n   }\n\n   signOut(){\n    localStorage.clear();\n    this.router.navigate(['login']);\n   }\n\n   storeToken(tokenValue: string){\n    localStorage.setItem('token',tokenValue);\n   }\n\n   getToken(){\n    return localStorage.getItem('token')\n   }\n\n   isLoggedIn(): boolean{\n    return !!localStorage.getItem('token')\n   }\n\n   decodeToken(){\n    const jwtHelper = new JwtHelperService();\n    const token = this.getToken()!;\n    return jwtHelper.decodeToken(token);\n   }\n\n\n}\n"],"mappings":";AAGA,SAASA,gBAAgB,QAAQ,oBAAoB;;;;AAKrD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF7C,KAAAC,OAAO,GAAU,kCAAkC;IAGzD,IAAI,CAACC,WAAW;EACjB;EAEAC,MAAMA,CAACC,OAAY;IAClB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACJ,OAAO,UAAU,EAACG,OAAO,CAAC;EAC9D;EAGAE,KAAKA,CAACC,QAAa;IAClB,OAAO,IAAI,CAACR,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACJ,OAAO,cAAc,EAACM,QAAQ,CAAC;EACnE;EAEAC,OAAOA,CAAA;IACNC,YAAY,CAACC,KAAK,EAAE;IACpB,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EAChC;EAEAC,UAAUA,CAACC,UAAkB;IAC5BJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAACD,UAAU,CAAC;EACzC;EAEAE,QAAQA,CAAA;IACP,OAAON,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;EACrC;EAEAC,UAAUA,CAAA;IACT,OAAO,CAAC,CAACR,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;EACvC;EAEAE,WAAWA,CAAA;IACV,MAAMC,SAAS,GAAG,IAAIvB,gBAAgB,EAAE;IACxC,MAAMwB,KAAK,GAAG,IAAI,CAACL,QAAQ,EAAG;IAC9B,OAAOI,SAAS,CAACD,WAAW,CAACE,KAAK,CAAC;EACpC;;SAtCUvB,WAAW;;mBAAXA,MAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAX7B,MAAW;EAAA8B,OAAA,EAAX9B,MAAW,CAAA+B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}