{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateform';\nexport let LoginComponent = class LoginComponent {\n  // @ViewChild('myModal') modal: any;\n  constructor(fb, auth, router, toast, userStore, resetService, elementRef, modalService) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n    this.userStore = userStore;\n    this.resetService = resetService;\n    this.elementRef = elementRef;\n    this.modalService = modalService;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPassword() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      //Send the object to database\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          // alert(res.message);\n          this.auth.storeToken(res.token);\n          let tokenPayload = this.auth.decodeToken();\n          this.userStore.setFullNameForStore(tokenPayload.name);\n          this.userStore.setRoleForStore(tokenPayload.role);\n          this.toast.success({\n            detail: \"SUCCESS\",\n            summary: res.message,\n            duration: 5000\n          });\n          if (res.role == \"User\") {\n            this.loginForm.reset();\n            this.router.navigate(['dashboard']);\n          } else {\n            this.loginForm.reset();\n            this.router.navigate(['/']);\n          }\n        },\n        error: err => {\n          // alert(err?.error.message)\n          this.toast.error({\n            detail: \"ERROR\",\n            summary: \"Something went wrong!\",\n            duration: 5000\n          });\n        }\n      });\n    } else {\n      //throw error using toaster and with required field.\n      ValidateForm.validateAllFormFields(this.loginForm);\n      alert(\"Your form is invaild\");\n    }\n  }\n  checkValidEmail(event) {\n    const value = event;\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/;\n    this.isValidEmail = pattern.test(value);\n    return this.isValidEmail;\n  }\n  confirmToReset() {\n    if (this.checkValidEmail(this.resetPasswordEmail)) {\n      //api call to be done\n      this.resetService.sendResetPasswordLink(this.resetPasswordEmail).subscribe({\n        next: res => {\n          this.toast.success({\n            detail: 'Success',\n            summary: 'Password reset was Success!',\n            duration: 5000\n          });\n          this.resetPasswordEmail = \"\";\n          const buttonRef = document.getElementById(\"closeBtn\");\n          buttonRef?.click();\n        },\n        error: err => {\n          this.toast.error({\n            detail: 'ERROR',\n            summary: 'Something went wrong! password reset',\n            duration: 5000\n          });\n        }\n      });\n    }\n  }\n  openModal() {\n    // this.elementRef.nativeElement.style.display = 'block';\n    // this.modal.openModal();\n    // const dialogRef = this.dialog.open(this.myModal);\n    // dialogRef.afterClosed().subscribe(result => {\n    //   console.log('The dialog was closed');\n    //   this.animal = result;\n    // });\n  }\n  closeModal() {}\n};\n__decorate([ViewChild('myTest')], LoginComponent.prototype, \"modal\", void 0);\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","ViewChild","Validators","ValidateForm","LoginComponent","constructor","fb","auth","router","toast","userStore","resetService","elementRef","modalService","type","isText","eyeIcon","ngOnInit","loginForm","group","username","required","password","hideShowPassword","onLogin","valid","login","value","subscribe","next","res","storeToken","token","tokenPayload","decodeToken","setFullNameForStore","name","setRoleForStore","role","success","detail","summary","message","duration","reset","navigate","error","err","validateAllFormFields","alert","checkValidEmail","event","pattern","isValidEmail","test","confirmToReset","resetPasswordEmail","sendResetPasswordLink","buttonRef","document","getElementById","click","openModal","closeModal","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/components/login/login.component.ts"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { NgToastService } from 'ng-angular-popup';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ResetPasswordService } from 'src/app/services/reset-password.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n    type: string = \"password\";\n    isText: boolean = false;\n    eyeIcon: string = \"fa-eye-slash\";\n    loginForm!: FormGroup;\n    public resetPasswordEmail!:string;\n    public isValidEmail! : boolean; \n\n    // @ViewChild('myModal') modal: any;\n\n    constructor(\n      private fb: FormBuilder, \n      private auth: AuthService, \n      private router: Router,\n      private toast: NgToastService,\n      private userStore : UserStoreService,\n      private resetService: ResetPasswordService, private elementRef: ElementRef,\n      private modalService: NgbModal\n     \n      ){\n\n    }\n\n    ngOnInit(): void{\n      this.loginForm = this.fb.group({\n        username: ['',Validators.required],\n        password: ['',Validators.required]\n      })\n    }\n\n    hideShowPassword(){\n      this.isText = !this.isText;\n      this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n      this.isText ? this.type = \"text\" : this.type = \"password\";\n    }\n\n    onLogin(){\n      if(this.loginForm.valid){\n\n        //Send the object to database\n        this.auth.login(this.loginForm.value)\n        .subscribe({\n          next:(res)=>{\n            // alert(res.message);\n            this.auth.storeToken(res.token);\n            let tokenPayload = this.auth.decodeToken();\n            this.userStore.setFullNameForStore(tokenPayload.name);\n            this.userStore.setRoleForStore(tokenPayload.role);\n            this.toast.success({detail:\"SUCCESS\", summary:res.message, duration: 5000});\n            if(res.role == \"User\"){\n              this.loginForm.reset();\n              this.router.navigate(['dashboard']);\n            }\n            else{\n              this.loginForm.reset();\n              this.router.navigate(['/']);\n            }\n          },\n          error:(err)=>{\n            // alert(err?.error.message)\n            this.toast.error({detail:\"ERROR\", summary:\"Something went wrong!\", duration: 5000});\n          }\n        })\n      }\n      else{\n        //throw error using toaster and with required field.\n        ValidateForm.validateAllFormFields(this.loginForm);\n        alert(\"Your form is invaild\");\n      }\n    }\n\n    checkValidEmail(event: string){\n      const value = event;\n      const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/;\n      this.isValidEmail = pattern.test(value);\n      return this.isValidEmail;\n    }\n\n    confirmToReset(){\n      if(this.checkValidEmail(this.resetPasswordEmail)){\n        \n        //api call to be done\n\n        this.resetService.sendResetPasswordLink(this.resetPasswordEmail)\n        .subscribe({\n          next:(res)=>{\n            this.toast.success({\n              detail: 'Success',\n              summary: 'Password reset was Success!',\n              duration: 5000,\n            });\n            this.resetPasswordEmail =\"\";\n            const buttonRef = document.getElementById(\"closeBtn\");\n            buttonRef?.click();\n          },\n          error:(err)=>{\n            this.toast.error({\n              detail: 'ERROR',\n              summary: 'Something went wrong! password reset',\n              duration: 5000,\n            });\n          }\n        })\n      }\n    }\n    @ViewChild('myTest') modal: any;\n\n  openModal() {\n    // this.elementRef.nativeElement.style.display = 'block';\n    // this.modal.openModal();\n\n    // const dialogRef = this.dialog.open(this.myModal);\n\n    // dialogRef.afterClosed().subscribe(result => {\n    //   console.log('The dialog was closed');\n    //   this.animal = result;\n    // });\n\n  }\n\n  closeModal():void{\n\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}