{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng-angular-popup\";\nimport * as i5 from \"src/app/services/user-store.service\";\nimport * as i6 from \"src/app/services/reset-password.service\";\nimport * as i7 from \"@angular/common\";\nfunction LoginComponent_small_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"*Username is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"*Password is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"*Email is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"*Email is invalid*\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, auth, router, toast, userStore, resetService) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n    this.userStore = userStore;\n    this.resetService = resetService;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  hideShowPassword() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      //Send the object to database\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          // alert(res.message);\n          this.auth.storeToken(res.token);\n          let tokenPayload = this.auth.decodeToken();\n          this.userStore.setFullNameForStore(tokenPayload.name);\n          this.userStore.setRoleForStore(tokenPayload.role);\n          this.toast.success({\n            detail: \"SUCCESS\",\n            summary: res.message,\n            duration: 5000\n          });\n          if (res.role == \"User\") {\n            this.loginForm.reset();\n            this.router.navigate(['dashboard']);\n          } else {\n            this.loginForm.reset();\n            this.router.navigate(['/']);\n          }\n        },\n        error: err => {\n          // alert(err?.error.message)\n          this.toast.error({\n            detail: \"ERROR\",\n            summary: \"Something went wrong!\",\n            duration: 5000\n          });\n        }\n      });\n    } else {\n      //throw error using toaster and with required field.\n      ValidateForm.validateAllFormFields(this.loginForm);\n      alert(\"Your form is invaild\");\n    }\n  }\n  checkValidEmail(event) {\n    const value = event;\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/;\n    this.isValidEmail = pattern.test(value);\n    return this.isValidEmail;\n  }\n  confirmToReset() {\n    if (this.checkValidEmail(this.resetPasswordEmail)) {\n      //api call to be done\n      this.resetService.sendResetPasswordLink(this.resetPasswordEmail).subscribe({\n        next: res => {\n          this.toast.success({\n            detail: 'Success',\n            summary: 'Password reset was Success!',\n            duration: 5000\n          });\n          this.resetPasswordEmail = \"\";\n          const buttonRef = document.getElementById(\"closeBtn\");\n          buttonRef?.click();\n        },\n        error: err => {\n          this.toast.error({\n            detail: 'ERROR',\n            summary: 'Something went wrong! password reset',\n            duration: 5000\n          });\n        }\n      });\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NgToastService), i0.ɵɵdirectiveInject(i5.UserStoreService), i0.ɵɵdirectiveInject(i6.ResetPasswordService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 55,\n  vars: 14,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\", 2, \"padding-right\", \"7rem\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\", \"required\", \"\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"px-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [\"type\", \"button\", 1, \"bg-white\", \"text-muted\", 3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"id\", \"forgot\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn\", \"btn-dark\", \"btn-block\", \"mt-4\", \"w-100\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forgot\", \"href\", \"#\", \"routerLink\", \"/signup\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [2, \"font-size\", \"25px\", \"font-weight\", \"700\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"id\", \"closeBtn\", \"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", 3, \"click\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \" google client id : 1080246497368-nj8foeq93ps3anpbf7rg11c1cl68n128.apps.googleusercontent.com --> \");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"h3\", 6);\n      i0.ɵɵtext(8, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10);\n      i0.ɵɵelement(13, \"span\", 11)(14, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, LoginComponent_small_15_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\", 10);\n      i0.ɵɵelement(18, \"span\", 14)(19, \"input\", 15);\n      i0.ɵɵelementStart(20, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelement(21, \"span\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(22, LoginComponent_small_22_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(23, \"div\", 17)(24, \"a\", 18);\n      i0.ɵɵtext(25, \"Forgot password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"button\", 19);\n      i0.ɵɵtext(27, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 20);\n      i0.ɵɵtext(29, \"Don't have an account? \");\n      i0.ɵɵelementStart(30, \"a\", 21);\n      i0.ɵɵtext(31, \"Sign up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n      i0.ɵɵelementStart(32, \"div\", 22)(33, \"div\", 23)(34, \"div\", 24)(35, \"div\", 25)(36, \"p\", 26)(37, \"span\", 27);\n      i0.ɵɵtext(38, \"Forget your password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"br\");\n      i0.ɵɵelementStart(40, \"small\");\n      i0.ɵɵtext(41, \"Provide your registred E-mail Id we will send you the Reset link.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(42, \"button\", 28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 29)(44, \"div\", 9)(45, \"div\", 10);\n      i0.ɵɵelement(46, \"span\", 11);\n      i0.ɵɵelementStart(47, \"input\", 30);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_47_listener($event) {\n        return ctx.resetPasswordEmail = $event;\n      })(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_47_listener($event) {\n        return ctx.checkValidEmail($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(48, LoginComponent_small_48_Template, 2, 0, \"small\", 13);\n      i0.ɵɵtemplate(49, LoginComponent_small_49_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 31)(51, \"button\", 32);\n      i0.ɵɵtext(52, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"button\", 33);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_53_listener() {\n        return ctx.confirmToReset();\n      });\n      i0.ɵɵtext(54, \"Send\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngModel\", ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isValidEmail && ctx.resetPasswordEmail);\n    }\n  },\n  dependencies: [i7.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","ValidateForm","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","auth","router","toast","userStore","resetService","type","isText","eyeIcon","ngOnInit","loginForm","group","username","required","password","hideShowPassword","onLogin","valid","login","value","subscribe","next","res","storeToken","token","tokenPayload","decodeToken","setFullNameForStore","name","setRoleForStore","role","success","detail","summary","message","duration","reset","navigate","error","err","validateAllFormFields","alert","checkValidEmail","event","pattern","isValidEmail","test","confirmToReset","resetPasswordEmail","sendResetPasswordLink","buttonRef","document","getElementById","click","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","NgToastService","i5","UserStoreService","i6","ResetPasswordService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_10_listener","ɵɵelement","ɵɵtemplate","LoginComponent_small_15_Template","LoginComponent_Template_button_click_20_listener","hideShowPass","LoginComponent_small_22_Template","LoginComponent_Template_input_ngModelChange_47_listener","$event","LoginComponent_small_48_Template","LoginComponent_small_49_Template","LoginComponent_Template_button_click_53_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","controls","dirty","hasError","ɵɵclassMapInterpolate1"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/components/login/login.component.ts","/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { NgToastService } from 'ng-angular-popup';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ResetPasswordService } from 'src/app/services/reset-password.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n    type: string = \"password\";\n    isText: boolean = false;\n    eyeIcon: string = \"fa-eye-slash\";\n    loginForm!: FormGroup;\n    public resetPasswordEmail!:string;\n    public isValidEmail! : boolean; \n\n    constructor(\n      private fb: FormBuilder, \n      private auth: AuthService, \n      private router: Router,\n      private toast: NgToastService,\n      private userStore : UserStoreService,\n      private resetService: ResetPasswordService){\n\n    }\n\n    ngOnInit(): void{\n      this.loginForm = this.fb.group({\n        username: ['',Validators.required],\n        password: ['',Validators.required]\n      })\n    }\n\n    hideShowPassword(){\n      this.isText = !this.isText;\n      this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n      this.isText ? this.type = \"text\" : this.type = \"password\";\n    }\n\n    onLogin(){\n      if(this.loginForm.valid){\n\n        //Send the object to database\n        this.auth.login(this.loginForm.value)\n        .subscribe({\n          next:(res)=>{\n            // alert(res.message);\n            this.auth.storeToken(res.token);\n            let tokenPayload = this.auth.decodeToken();\n            this.userStore.setFullNameForStore(tokenPayload.name);\n            this.userStore.setRoleForStore(tokenPayload.role);\n            this.toast.success({detail:\"SUCCESS\", summary:res.message, duration: 5000});\n            if(res.role == \"User\"){\n              this.loginForm.reset();\n              this.router.navigate(['dashboard']);\n            }\n            else{\n              this.loginForm.reset();\n              this.router.navigate(['/']);\n            }\n          },\n          error:(err)=>{\n            // alert(err?.error.message)\n            this.toast.error({detail:\"ERROR\", summary:\"Something went wrong!\", duration: 5000});\n          }\n        })\n      }\n      else{\n        //throw error using toaster and with required field.\n        ValidateForm.validateAllFormFields(this.loginForm);\n        alert(\"Your form is invaild\");\n      }\n    }\n\n    checkValidEmail(event: string){\n      const value = event;\n      const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/;\n      this.isValidEmail = pattern.test(value);\n      return this.isValidEmail;\n    }\n\n    confirmToReset(){\n      if(this.checkValidEmail(this.resetPasswordEmail)){\n        \n        //api call to be done\n\n        this.resetService.sendResetPasswordLink(this.resetPasswordEmail)\n        .subscribe({\n          next:(res)=>{\n            this.toast.success({\n              detail: 'Success',\n              summary: 'Password reset was Success!',\n              duration: 5000,\n            });\n            this.resetPasswordEmail =\"\";\n            const buttonRef = document.getElementById(\"closeBtn\");\n            buttonRef?.click();\n          },\n          error:(err)=>{\n            this.toast.error({\n              detail: 'ERROR',\n              summary: 'Something went wrong! password reset',\n              duration: 5000,\n            });\n          }\n        })\n      }\n    }\n\n}\n","<!-- \n<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n                    </div>\n                    <div class=\"panel-body p-3\">\n                        <form [formGroup]=\"loginForm\">\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                                </div>\n                            </div>\n                            <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" \n                                class=\"text-danger\">*Username is required</small>\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n                                    <span class=\"fa fa-lock p-2\"></span>\n                                    <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                                    <span class=\"fa {{ eyeIcon }}\" (click)=\"hideShowPassword()\"></span>\n                                </div>\n                            </div>\n                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" \n                                class=\"text-danger\">*Password is required</small>\n                            <div class=\"form-inline fr mt-4\"> <a id=\"forgot\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"font-weight-bold\">Forgot password?</a> </div>\n                            <button \n                                (click)=\"onLogin()\"\n                                type=\"submit\" \n                                class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\n                            <div class=\"text-center pt-4 text-muted\">Don't have account? <a id=\"forget\" routerLink=\"/signup\">Sign Up</a></div>\n                            <div class=\"text-center pt-4 text-muted\">Want to become a seller? <a id=\"forget\" routerLink=\"/signupvendor\">Vendor Sign Up</a></div>\n                        </form>\n                    </div>\n                    <div class=\"mx-3 my-2 py-2 bordert\">\n                        <div class=\"text-center py-3\">\n                            <a href=\"https://www.facebook.com\" target=\"_blank\" class=\"px-2\"><img src=\"https://www.freepnglogos.com/uploads/aqua-blue-f-facebook-logo-png-22.png\" alt=\"facebook\"></a>\n                            <a href=\"https://www.google.com\" target=\"_blank\" class=\"px-2\"><img src=\"https://www.freepnglogos.com/uploads/google-favicon-logo-20.png\" alt=\"google\"></a>\n                            <a href=\"https://www.outlook.com\" target=\"_blank\" class=\"px-2\"><img src=\"https://www.freepnglogos.com/uploads/logo-outlook/outlook-transparent-save-outlook-png-icons-and-png-backgrounds-0.png\" alt=\"outlook\"></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <p class=\"modal-title\" id=\"exampleModalLabel\"> <span style=\"font-size: 25px;font-weight:700\">Forget your password?</span><br>\n                    <small>Please provide your E-mail we will send the reset link</small></p>\n\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n\n            </div>\n\n            <div class=\"modal-body\">\n                <div class=\"form-group pt-3\">\n                    <div class=\"input-field\"> <span class=\"fa fa-user p-2\"></span> <input [(ngModel)]=\"resetPasswordEmail\"  (ngModelChange)=\"checkValidEmail($event)\" type=\"text\" placeholder=\"Email\"> </div>\n                </div>\n                <small *ngIf=\"!resetPasswordEmail\" class=\"text-danger\">*Email is required*</small>\n                <small *ngIf=\"!isValidEmail && resetPasswordEmail\" class=\"text-danger\">*Email is invalid*</small>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" id=\"closeBtn\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button (click)=\"confirmToReset()\" [disabled]=\"!(isValidEmail && resetPasswordEmail)\" type=\"button\" class=\"btn btn-primary\">Send</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- zoej htzq khag vrqu -->\n\ngoogle client id : 1080246497368-nj8foeq93ps3anpbf7rg11c1cl68n128.apps.googleusercontent.com -->\n\n<div class=\"outer\" >\n    <div class=\"container\">\n       <div class=\"row\" style=\"padding-right: 7rem;\">\n           <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n               <div class=\"panel border bg-white\">\n                   <div class=\"panel-heading\">\n                       <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n                   </div>\n                   <div class=\"panel-body p-3\">\n                       <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n                           <div class=\"form-group pt-3\">\n                               <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\"> <span class=\"fa fa-user p-2\"></span> <input formControlName=\"username\" type=\"text\" placeholder=\"Username\" required> </div>\n                           </div>\n                           <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required*</small>\n                           <div class=\"form-group pt-3\">\n                               <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\"> <span class=\"fa fa-lock px-2\"></span> <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\"> <button type=\"button\" (click)=\"hideShowPass()\" class=\"bg-white text-muted\"> <span class=\"fa {{eyeIcon}}\"></span> </button>                                    </div>\n                           </div>\n                           <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required*</small>\n                           <div class=\"form-inline fr mt-4\"> <a id=\"forgot\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"font-weight-bold\">Forgot password?</a> </div>\n                           <button type=\"submit\" class=\"btn btn btn-dark btn-block mt-4 w-100\">Login</button>\n                           <div class=\"text-center pt-4 text-muted\">Don't have an account? <a id=\"forgot\" href=\"#\" routerLink=\"/signup\">Sign up</a> </div>\n                       </form>\n                   </div>\n               </div>\n           </div>\n       </div>\n   </div>\n </div>\n <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n   <div class=\"modal-dialog modal-dialog-centered\">\n       <div class=\"modal-content\">\n           <div class=\"modal-header\">\n               <p class=\"modal-title\" id=\"exampleModalLabel\"> <span style=\"font-size: 25px;font-weight:700\">Forget your password?</span><br>\n                   <small>Provide your registred E-mail Id we will send you the Reset link.</small></p>\n               <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n           </div>\n           <div class=\"modal-body\">\n               <div class=\"form-group pt-3\">\n                   <div class=\"input-field\"> <span class=\"fa fa-user p-2\"></span> <input [(ngModel)]=\"resetPasswordEmail\"  (ngModelChange)=\"checkValidEmail($event)\" type=\"text\" placeholder=\"Email\"> </div>\n               </div>\n               <small *ngIf=\"!resetPasswordEmail\" class=\"text-danger\">*Email is required*</small>\n               <small *ngIf=\"!isValidEmail && resetPasswordEmail\" class=\"text-danger\">*Email is invalid*</small>\n           </div>\n           <div class=\"modal-footer\">\n               <button id=\"closeBtn\" type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n               <button type=\"button\" (click)=\"confirmToReset()\" class=\"btn btn-dark\">Send</button>\n           </div>\n       </div>\n   </div>\n </div>\n \n \n \n \n \n \n \n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}