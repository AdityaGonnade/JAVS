{"ast":null,"code":"\"use strict\";\n\n// import { Injectable } from '@angular/core';\n// import {\n//   HttpRequest,\n//   HttpHandler,\n//   HttpEvent,\n//   HttpInterceptor,\n//   HttpErrorResponse\n// } from '@angular/common/http';\n// import { Observable, catchError, throwError } from 'rxjs';\n// import { AuthService } from '../services/auth.service';\n// import { NgToastService } from 'ng-angular-popup';\n// import { Router } from '@angular/router';\n// import { CookieService } from 'ngx-cookie-service';\n// @Injectable()\n// export class TokenInterceptor implements HttpInterceptor {\n//   constructor(\n//     private auth: AuthService, \n//     private toast: NgToastService,\n//     private route: Router,\n//     private cookieService : CookieService) {}\n//   intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n//     const myToken = this.auth.getToken();\n//     if(myToken){\n//       request = request.clone({\n//         setHeaders: {Authorization: `Bearer ${myToken}`\n//       } // \"Bearer \"+ mytoken\n//       })\n//     }\n//     return next.handle(request).pipe(\n//       catchError((err: any)=>{\n//         if(err instanceof HttpErrorResponse){\n//           if(err.status === 401){\n//             this.toast.warning({detail:\"Warning\", summary:\"Token is expired, Please login again\"});\n//             this.route.navigate(['login'])\n//           }\n//         }\n//         return throwError(()=> new Error(\"Some other error occured\"))\n//       })\n//     );\n//   }\n// }","map":{"version":3,"names":[],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/interceptors/token.interceptor.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import {\n//   HttpRequest,\n//   HttpHandler,\n//   HttpEvent,\n//   HttpInterceptor,\n//   HttpErrorResponse\n// } from '@angular/common/http';\n// import { Observable, catchError, throwError } from 'rxjs';\n// import { AuthService } from '../services/auth.service';\n// import { NgToastService } from 'ng-angular-popup';\n// import { Router } from '@angular/router';\n// import { CookieService } from 'ngx-cookie-service';\n\n// @Injectable()\n// export class TokenInterceptor implements HttpInterceptor {\n\n//   constructor(\n//     private auth: AuthService, \n//     private toast: NgToastService,\n//     private route: Router,\n//     private cookieService : CookieService) {}\n\n//   intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    \n//     const myToken = this.auth.getToken();\n//     if(myToken){\n//       request = request.clone({\n//         setHeaders: {Authorization: `Bearer ${myToken}`\n//       } // \"Bearer \"+ mytoken\n\n//       })\n//     }\n\n//     return next.handle(request).pipe(\n//       catchError((err: any)=>{\n//         if(err instanceof HttpErrorResponse){\n//           if(err.status === 401){\n//             this.toast.warning({detail:\"Warning\", summary:\"Token is expired, Please login again\"});\n//             this.route.navigate(['login'])\n//           }\n//         }\n//         return throwError(()=> new Error(\"Some other error occured\"))\n//       })\n//     );\n//   }\n// }\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}