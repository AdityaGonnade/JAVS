{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"ng-angular-popup\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-cookie-service\";\nexport class TokenInterceptor {\n  constructor(auth, toast, route, cookieService) {\n    this.auth = auth;\n    this.toast = toast;\n    this.route = route;\n    this.cookieService = cookieService;\n  }\n  intercept(request, next) {\n    const myToken = this.auth.getToken();\n    if (myToken) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${myToken}`\n        } // \"Bearer \"+ mytoken\n      });\n    }\n\n    return next.handle(request).pipe(catchError(err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          this.toast.warning({\n            detail: \"Warning\",\n            summary: \"Token is expired, Please login again\"\n          });\n          this.route.navigate(['login']);\n        }\n      }\n      return throwError(() => new Error(\"Some other error occured\"));\n    }));\n  }\n  static #_ = this.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.NgToastService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["HttpErrorResponse","catchError","throwError","TokenInterceptor","constructor","auth","toast","route","cookieService","intercept","request","next","myToken","getToken","clone","setHeaders","Authorization","handle","pipe","err","status","warning","detail","summary","navigate","Error","_","i0","ɵɵinject","i1","AuthService","i2","NgToastService","i3","Router","i4","CookieService","_2","factory","ɵfac"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/interceptors/token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { NgToastService } from 'ng-angular-popup';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(\n    private auth: AuthService, \n    private toast: NgToastService,\n    private route: Router,\n    private cookieService : CookieService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    \n    const myToken = this.auth.getToken();\n    if(myToken){\n      request = request.clone({\n        setHeaders: {Authorization: `Bearer ${myToken}`\n      } // \"Bearer \"+ mytoken\n\n      })\n    }\n\n    return next.handle(request).pipe(\n      catchError((err: any)=>{\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.toast.warning({detail:\"Warning\", summary:\"Token is expired, Please login again\"});\n            this.route.navigate(['login'])\n          }\n        }\n        return throwError(()=> new Error(\"Some other error occured\"))\n      })\n    );\n  }\n}\n"],"mappings":"AACA,SAKEA,iBAAiB,QACZ,sBAAsB;AAC7B,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;;;;AAOzD,OAAM,MAAOC,gBAAgB;EAE3BC,YACUC,IAAiB,EACjBC,KAAqB,EACrBC,KAAa,EACbC,aAA6B;IAH7B,KAAAH,IAAI,GAAJA,IAAI;IACJ,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,aAAa,GAAbA,aAAa;EAAmB;EAE1CC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAExD,MAAMC,OAAO,GAAG,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE;IACpC,IAAGD,OAAO,EAAC;MACTF,OAAO,GAAGA,OAAO,CAACI,KAAK,CAAC;QACtBC,UAAU,EAAE;UAACC,aAAa,EAAE,UAAUJ,OAAO;SAC9C,CAAC;OAED,CAAC;;;IAGJ,OAAOD,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC,CAACQ,IAAI,CAC9BjB,UAAU,CAAEkB,GAAQ,IAAG;MACrB,IAAGA,GAAG,YAAYnB,iBAAiB,EAAC;QAClC,IAAGmB,GAAG,CAACC,MAAM,KAAK,GAAG,EAAC;UACpB,IAAI,CAACd,KAAK,CAACe,OAAO,CAAC;YAACC,MAAM,EAAC,SAAS;YAAEC,OAAO,EAAC;UAAsC,CAAC,CAAC;UACtF,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;;MAGlC,OAAOtB,UAAU,CAAC,MAAK,IAAIuB,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC/D,CAAC,CAAC,CACH;EACH;EAAC,QAAAC,CAAA,G;qBA9BUvB,gBAAgB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA,GAAAP,EAAA,CAAAC,QAAA,CAAAO,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBlC,gBAAgB;IAAAmC,OAAA,EAAhBnC,gBAAgB,CAAAoC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}