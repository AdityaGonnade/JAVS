{"ast":null,"code":"export function ConfirmPasswordValidator(controlName, matchControlName) {\n  return formGroup => {\n    const passwordControl = formGroup.controls[controlName];\n    const ConfirmPasswordControl = formGroup.controls[matchControlName];\n    if (ConfirmPasswordControl.errors && ConfirmPasswordControl.errors['confirmPasswordValidator']) {\n      return;\n    }\n    if (passwordControl.value !== ConfirmPasswordControl.value) {\n      ConfirmPasswordControl.setErrors({\n        confirmPasswordValidator: true\n      });\n    } else {\n      ConfirmPasswordControl.setErrors(null);\n    }\n  };\n}","map":{"version":3,"names":["ConfirmPasswordValidator","controlName","matchControlName","formGroup","passwordControl","controls","ConfirmPasswordControl","errors","value","setErrors","confirmPasswordValidator"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/helpers/confirm-password.validator.ts"],"sourcesContent":["import { FormGroup } from \"@angular/forms\";\n\nexport function ConfirmPasswordValidator(controlName: string, matchControlName: string){\n    return (formGroup: FormGroup)=>{\n        const passwordControl = formGroup.controls[controlName];\n        const ConfirmPasswordControl = formGroup.controls[matchControlName];\n\n        if(ConfirmPasswordControl.errors && ConfirmPasswordControl.errors['confirmPasswordValidator']){\n            return;\n        }\n\n        if(passwordControl.value !== ConfirmPasswordControl.value){\n            ConfirmPasswordControl.setErrors({confirmPasswordValidator: true})\n        }else{\n            ConfirmPasswordControl.setErrors(null);\n        }\n    }\n}"],"mappings":"AAEA,OAAM,SAAUA,wBAAwBA,CAACC,WAAmB,EAAEC,gBAAwB;EAClF,OAAQC,SAAoB,IAAG;IAC3B,MAAMC,eAAe,GAAGD,SAAS,CAACE,QAAQ,CAACJ,WAAW,CAAC;IACvD,MAAMK,sBAAsB,GAAGH,SAAS,CAACE,QAAQ,CAACH,gBAAgB,CAAC;IAEnE,IAAGI,sBAAsB,CAACC,MAAM,IAAID,sBAAsB,CAACC,MAAM,CAAC,0BAA0B,CAAC,EAAC;MAC1F;;IAGJ,IAAGH,eAAe,CAACI,KAAK,KAAKF,sBAAsB,CAACE,KAAK,EAAC;MACtDF,sBAAsB,CAACG,SAAS,CAAC;QAACC,wBAAwB,EAAE;MAAI,CAAC,CAAC;KACrE,MAAI;MACDJ,sBAAsB,CAACG,SAAS,CAAC,IAAI,CAAC;;EAE9C,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}