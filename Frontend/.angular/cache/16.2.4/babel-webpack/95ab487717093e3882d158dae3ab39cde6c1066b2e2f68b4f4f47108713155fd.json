{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserStoreService {\n  constructor() {\n    this.fullName$ = new BehaviorSubject(\"\");\n    this.role$ = new BehaviorSubject(\"\");\n    this.userid$ = new BehaviorSubject(\"\");\n  }\n  getRoleFromStore() {\n    return this.role$.asObservable();\n  }\n  setRoleForStore(role) {\n    this.role$.next(role);\n  }\n  getFullNameFromStore() {\n    return this.fullName$.asObservable();\n  }\n  setFullNameForStore(fullname) {\n    localStorage.setItem('fullname', fullname);\n    this.fullName$.next(fullname);\n  }\n  getUserIdFromStore() {\n    return this.userid$.asObservable();\n  }\n  setUserIdFromStore(id) {\n    localStorage.setItem('userid', id);\n    this.userid$.next(id);\n  }\n  static #_ = this.ɵfac = function UserStoreService_Factory(t) {\n    return new (t || UserStoreService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserStoreService,\n    factory: UserStoreService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","UserStoreService","constructor","fullName$","role$","userid$","getRoleFromStore","asObservable","setRoleForStore","role","next","getFullNameFromStore","setFullNameForStore","fullname","localStorage","setItem","getUserIdFromStore","setUserIdFromStore","id","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/services/user-store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStoreService {\n\n  private fullName$ = new BehaviorSubject<string>(\"\");\n  private role$ = new BehaviorSubject<string>(\"\");\n  private userid$ = new BehaviorSubject<string>(\"\");\n  constructor(\n  ) {}\n\n    public getRoleFromStore(){\n      return this.role$.asObservable();\n    }\n\n    public setRoleForStore(role: string){\n      this.role$.next(role);\n    }\n\n    public getFullNameFromStore(){\n      return this.fullName$.asObservable();\n    }\n\n    public setFullNameForStore(fullname: string){\n      localStorage.setItem('fullname',fullname);\n      this.fullName$.next(fullname);\n    }\n\n    public getUserIdFromStore(){\n      return this.userid$.asObservable();\n    }\n\n    public setUserIdFromStore(id: string){\n      localStorage.setItem('userid',id);\n      this.userid$.next(id);\n    }\n\n\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,gBAAgB;EAK3BC,YAAA;IAHQ,KAAAC,SAAS,GAAG,IAAIH,eAAe,CAAS,EAAE,CAAC;IAC3C,KAAAI,KAAK,GAAG,IAAIJ,eAAe,CAAS,EAAE,CAAC;IACvC,KAAAK,OAAO,GAAG,IAAIL,eAAe,CAAS,EAAE,CAAC;EAE9C;EAEMM,gBAAgBA,CAAA;IACrB,OAAO,IAAI,CAACF,KAAK,CAACG,YAAY,EAAE;EAClC;EAEOC,eAAeA,CAACC,IAAY;IACjC,IAAI,CAACL,KAAK,CAACM,IAAI,CAACD,IAAI,CAAC;EACvB;EAEOE,oBAAoBA,CAAA;IACzB,OAAO,IAAI,CAACR,SAAS,CAACI,YAAY,EAAE;EACtC;EAEOK,mBAAmBA,CAACC,QAAgB;IACzCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAACF,QAAQ,CAAC;IACzC,IAAI,CAACV,SAAS,CAACO,IAAI,CAACG,QAAQ,CAAC;EAC/B;EAEOG,kBAAkBA,CAAA;IACvB,OAAO,IAAI,CAACX,OAAO,CAACE,YAAY,EAAE;EACpC;EAEOU,kBAAkBA,CAACC,EAAU;IAClCJ,YAAY,CAACC,OAAO,CAAC,QAAQ,EAACG,EAAE,CAAC;IACjC,IAAI,CAACb,OAAO,CAACK,IAAI,CAACQ,EAAE,CAAC;EACvB;EAAC,QAAAC,CAAA,G;qBAhCQlB,gBAAgB;EAAA;EAAA,QAAAmB,EAAA,G;WAAhBnB,gBAAgB;IAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}