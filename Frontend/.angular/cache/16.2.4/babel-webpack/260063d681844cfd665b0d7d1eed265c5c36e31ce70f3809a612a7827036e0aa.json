{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class PasswordStrengthComponent {\n  constructor() {\n    this.passwordToCheck = \"\";\n    this.passwordStrength = new EventEmitter();\n    this.bar0 = \"\";\n    this.bar1 = \"\";\n    this.bar2 = \"\";\n    this.bar3 = \"\";\n    this.msg = '';\n    this.colors = ['darkred', 'orangered', 'orange', 'yellowgreen'];\n    this.bar0 = 'grey';\n    this.bar1 = 'grey';\n    this.bar2 = 'grey';\n    this.bar3 = 'grey';\n  }\n  static checkStrength(p) {\n    let force = 0;\n    const regex = /[$-/:-?{-~!\"^_@`\\[\\]]/g;\n    const lowerLetters = /[a-z]+/.test(p);\n    const upperLetters = /[A-Z]+/.test(p);\n    const numbers = /[0-9]+/.test(p);\n    const symbols = regex.test(p);\n    const flags = [lowerLetters, upperLetters, numbers, symbols];\n    let passedMatches = 0;\n    for (const flag of flags) {\n      passedMatches += flag === true ? 1 : 0;\n    }\n    force += 2 * p.length + (p.length >= 10 ? 1 : 0);\n    force += passedMatches * 10;\n    // short password\n    force = p.length <= 6 ? Math.min(force, 10) : force;\n    // poor variety of characters\n    force = passedMatches === 1 ? Math.min(force, 10) : force;\n    force = passedMatches === 2 ? Math.min(force, 20) : force;\n    force = passedMatches === 3 ? Math.min(force, 30) : force;\n    force = passedMatches === 4 ? Math.min(force, 40) : force;\n    return force;\n  }\n  ngOnChanges(changes) {\n    const password = changes['passwordToCheck'].currentValue;\n    this.setBarColors(4, '#DDD');\n    if (password) {\n      const c = this.getColor(PasswordStrengthComponent.checkStrength(password));\n      this.setBarColors(c.idx, c.col);\n      const pwdStrength = PasswordStrengthComponent.checkStrength(password);\n      pwdStrength === 40 ? this.passwordStrength.emit(true) : this.passwordStrength.emit(false);\n      switch (c.idx) {\n        case 1:\n          this.msg = 'Poor';\n          break;\n        case 2:\n          this.msg = 'Not Good';\n          break;\n        case 3:\n          this.msg = 'Average';\n          break;\n        case 4:\n          this.msg = 'Good';\n          break;\n      }\n    } else {\n      this.msg = '';\n    }\n  }\n  getColor(s) {\n    let idx = 0;\n    if (s <= 10) {\n      idx = 0;\n    } else if (s <= 20) {\n      idx = 1;\n    } else if (s <= 30) {\n      idx = 2;\n    } else if (s <= 40) {\n      idx = 3;\n    } else {\n      idx = 4;\n    }\n    return {\n      idx: idx + 1,\n      col: this.colors[idx]\n    };\n  }\n  setBarColors(count, col) {\n    for (let n = 0; n < count; n++) {\n      this['bar' + n] = col;\n    }\n  }\n  static #_ = this.ɵfac = function PasswordStrengthComponent_Factory(t) {\n    return new (t || PasswordStrengthComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordStrengthComponent,\n    selectors: [[\"app-password-strength\"]],\n    inputs: {\n      passwordToCheck: \"passwordToCheck\"\n    },\n    outputs: {\n      passwordStrength: \"passwordStrength\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 9,\n    vars: 9,\n    consts: [[1, \"strength\"], [1, \"strengthBar\"], [1, \"point\"]],\n    template: function PasswordStrengthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1);\n        i0.ɵɵelement(2, \"li\", 2)(3, \"li\", 2)(4, \"li\", 2)(5, \"li\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background-color\", ctx.bar3);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.msg);\n      }\n    },\n    styles: [\".strengthBar[_ngcontent-%COMP%] {\\n    display: inline;\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n    vertical-align: 2px;\\n  }\\n  \\n  .point[_ngcontent-%COMP%]:last-of-type {\\n    margin: 0 !important;\\n  }\\n  \\n  .point[_ngcontent-%COMP%] {\\n    background: #DDD;\\n    border-radius: 2px;\\n    display: inline-block;\\n    height: 5px;\\n    margin-right: 1px;\\n    width: 62px;\\n  }\\n  \\n  p[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n    font-size: 20px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYXNzd29yZC1zdHJlbmd0aC9wYXNzd29yZC1zdHJlbmd0aC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsVUFBVTtJQUNWLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsV0FBVztFQUNiOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGVBQWU7RUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RyZW5ndGhCYXIge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHZlcnRpY2FsLWFsaWduOiAycHg7XG4gIH1cbiAgXG4gIC5wb2ludDpsYXN0LW9mLXR5cGUge1xuICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICB9XG4gIFxuICAucG9pbnQge1xuICAgIGJhY2tncm91bmQ6ICNEREQ7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDFweDtcbiAgICB3aWR0aDogNjJweDtcbiAgfVxuICBcbiAgcCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","PasswordStrengthComponent","constructor","passwordToCheck","passwordStrength","bar0","bar1","bar2","bar3","msg","colors","checkStrength","p","force","regex","lowerLetters","test","upperLetters","numbers","symbols","flags","passedMatches","flag","length","Math","min","ngOnChanges","changes","password","currentValue","setBarColors","c","getColor","idx","col","pwdStrength","emit","s","count","n","_","_2","selectors","inputs","outputs","features","i0","ɵɵNgOnChangesFeature","decls","vars","consts","template","PasswordStrengthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵstyleProp","ɵɵtextInterpolate"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/components/password-strength/password-strength.component.ts","/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/components/password-strength/password-strength.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output, SimpleChange } from '@angular/core';\n\n@Component({\n  selector: 'app-password-strength',\n  templateUrl: './password-strength.component.html',\n  styleUrls: ['./password-strength.component.css']\n})\nexport class PasswordStrengthComponent {\n  @Input() public passwordToCheck: string =\"\";\n  @Output() passwordStrength = new EventEmitter<boolean>();\n  bar0: string =\"\";\n  bar1: string =\"\";\n  bar2: string =\"\";\n  bar3: string =\"\";\n\n  msg = '';\n  [key: string]: any;\n\n\n  private colors = ['darkred', 'orangered', 'orange', 'yellowgreen'];\n\n  constructor() {\n    this.bar0 = 'grey';\n    this.bar1 = 'grey';\n    this.bar2 = 'grey';\n    this.bar3 = 'grey';\n    \n  }\n\n  private static checkStrength(p: string) {\n    let force = 0;\n    const regex = /[$-/:-?{-~!\"^_@`\\[\\]]/g;\n\n    const lowerLetters = /[a-z]+/.test(p);\n    const upperLetters = /[A-Z]+/.test(p);\n    const numbers = /[0-9]+/.test(p);\n    const symbols = regex.test(p);\n\n    const flags = [lowerLetters, upperLetters, numbers, symbols];\n\n    let passedMatches = 0;\n    for (const flag of flags) {\n      passedMatches += flag === true ? 1 : 0;\n    }\n\n    force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n    force += passedMatches * 10;\n\n    // short password\n    force = (p.length <= 6) ? Math.min(force, 10) : force;\n\n    // poor variety of characters\n    force = (passedMatches === 1) ? Math.min(force, 10) : force;\n    force = (passedMatches === 2) ? Math.min(force, 20) : force;\n    force = (passedMatches === 3) ? Math.min(force, 30) : force;\n    force = (passedMatches === 4) ? Math.min(force, 40) : force;\n\n    return force;\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    const password = changes['passwordToCheck'].currentValue;\n    this.setBarColors(4, '#DDD');\n    if (password) {\n      const c = this.getColor(PasswordStrengthComponent.checkStrength(password));\n      this.setBarColors(c.idx, c.col);\n\n      const pwdStrength = PasswordStrengthComponent.checkStrength(password);\n      pwdStrength === 40 ? this.passwordStrength.emit(true) : this.passwordStrength.emit(false);\n\n      switch (c.idx) {\n        case 1:\n          this.msg = 'Poor';\n          break;\n        case 2:\n          this.msg = 'Not Good';\n          break;\n        case 3:\n          this.msg = 'Average';\n          break;\n        case 4:\n          this.msg = 'Good';\n          break;\n      }\n    } else {\n      this.msg = '';\n    }\n  }\n\n\n  private getColor(s: number) {\n    let idx = 0;\n    if (s <= 10) {\n        idx = 0;\n    } else if (s <= 20) {\n        idx = 1;\n    } else if (s <= 30) {\n        idx = 2;\n    } else if (s <= 40) {\n        idx = 3;\n    } else {\n        idx = 4;\n    }\n    return {\n        idx: idx + 1,\n        col: this.colors[idx]\n    };\n  }\n\n  private setBarColors(count: number, col: string) {\n    for (let n = 0; n < count; n++) {\n        this['bar'+n] = col;\n    }\n  }\n}\n","<div class=\"strength\">\n  <ul class=\"strengthBar\">\n    <li class=\"point\" [style.background-color]=\"bar0\"></li>\n    <li class=\"point\" [style.background-color]=\"bar1\"></li>\n    <li class=\"point\" [style.background-color]=\"bar2\"></li>\n    <li class=\"point\" [style.background-color]=\"bar3\"></li>\n  </ul>\n  <br>\n  <p>{{msg}}</p>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}