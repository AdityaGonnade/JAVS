{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  // private userPayload: any;\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = \"https://localhost:7031/api/User/\";\n    // this.userPayload = {\n    //   \"name\" : \"aditya\",\n    //   \"role\" : \"User\",\n    //   \"guid\" : \"ad136187458gc841841g\"\n    // };\n  }\n\n  signUp(userObj) {\n    return this.http.post(`${this.baseUrl}register`, userObj);\n  }\n  signUpVendor(vendorObj) {\n    return this.http.post(`${this.baseUrl}vendorRegister`, vendorObj);\n  }\n  login(loginObj) {\n    const header = new HttpHeaders().set('Content-type', 'application/json');\n    return this.http.post(`${this.baseUrl}authenticate`, loginObj, {\n      headers: header,\n      observe: 'response',\n      withCredentials: true\n    });\n  }\n  signOut() {\n    localStorage.clear();\n    this.router.navigate(['login']);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AuthService","constructor","http","router","baseUrl","signUp","userObj","post","signUpVendor","vendorObj","login","loginObj","header","set","headers","observe","withCredentials","signOut","localStorage","clear","navigate","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["/Users/aditya.gonnade/Documents/GitHub/JAVS/Frontend/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl:string = \"https://localhost:7031/api/User/\"\n  // private userPayload: any;\n  constructor(private http : HttpClient, private router: Router) {\n    // this.userPayload = {\n    //   \"name\" : \"aditya\",\n    //   \"role\" : \"User\",\n    //   \"guid\" : \"ad136187458gc841841g\"\n    // };\n   }\n\n   signUp(userObj: any){\n    return this.http.post<any>(`${this.baseUrl}register`,userObj);\n   }\n\n   signUpVendor(vendorObj : any){\n    return this.http.post<any>(`${this.baseUrl}vendorRegister`,vendorObj);\n   }\n   \n\n   login(loginObj: any){\n    const header = new HttpHeaders().set('Content-type', 'application/json');\n    return this.http.post<any>(`${this.baseUrl}authenticate`,loginObj,{\n      headers: header,\n      observe: 'response',\n      withCredentials: true\n    });\n   }\n\n   signOut(){\n    localStorage.clear();\n    this.router.navigate(['login']);\n   }\n\n  //  storeToken(tokenValue: string){\n  //   localStorage.setItem('token',\"logedin\");\n  //  }\n\n  //  getToken(){\n  //   return localStorage.getItem('token')\n  //  }\n\n  //  isLoggedIn(): boolean{\n  //   return !!localStorage.getItem('token')\n  //  }\n\n  //  decodeToken(){\n  //   const jwtHelper = new JwtHelperService();\n  //   const token = this.getToken()!;\n  //   return jwtHelper.decodeToken(token);\n  //  }\n\n  //  getFullNameFromToken(){\n  //   if(this.userPayload)\n  //   return this.userPayload.name;\n  //  }\n\n  //  getRoleFromToken(){\n  //   if(this.userPayload)\n  //   return this.userPayload.role;\n  //  }\n\n  //  getUseridFromToken(){\n  //   if(this.userPayload)\n  //   return this.userPayload.guid;\n  //  }\n\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,WAAW;EAGtB;EACAC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF7C,KAAAC,OAAO,GAAU,kCAAkC;IAGzD;IACA;IACA;IACA;IACA;EACD;;EAEAC,MAAMA,CAACC,OAAY;IAClB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,UAAU,EAACE,OAAO,CAAC;EAC9D;EAEAE,YAAYA,CAACC,SAAe;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,gBAAgB,EAACK,SAAS,CAAC;EACtE;EAGAC,KAAKA,CAACC,QAAa;IAClB,MAAMC,MAAM,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACxE,OAAO,IAAI,CAACX,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,cAAc,EAACO,QAAQ,EAAC;MAChEG,OAAO,EAAEF,MAAM;MACfG,OAAO,EAAE,UAAU;MACnBC,eAAe,EAAE;KAClB,CAAC;EACH;EAEAC,OAAOA,CAAA;IACNC,YAAY,CAACC,KAAK,EAAE;IACpB,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EAChC;EAAC,QAAAC,CAAA,G;qBAjCSrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX5B,WAAW;IAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}